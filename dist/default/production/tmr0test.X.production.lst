

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Apr 19 22:07:14 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x4E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F84A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     0081                     	;# 
    60     0085                     	;# 
    61     0086                     	;# 
    62     0088                     	;# 
    63     0089                     	;# 
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     0081                     	;# 
    76     0085                     	;# 
    77     0086                     	;# 
    78     0088                     	;# 
    79     0089                     	;# 
    80     0001                     _TMR0	set	1
    81     000B                     _INTCONbits	set	11
    82     0005                     _PORTA	set	5
    83     0006                     _PORTB	set	6
    84     0081                     _OPTION_REGbits	set	129
    85     0086                     _TRISB	set	134
    86     0085                     _TRISA	set	133
    87                           
    88                           	psect	cinit
    89     000E                     start_initialization:	
    90                           ; #config settings
    91                           
    92     000E                     __initialization:
    93     000E                     end_of_initialization:	
    94                           ;End of C runtime variable initialization code
    95                           
    96     000E                     __end_of__initialization:
    97     000E  0183               	clrf	3
    98     000F  2810               	ljmp	_main	;jump to C main() function
    99                           
   100                           	psect	cstackCOMMON
   101     0000                     __pcstackCOMMON:
   102     0000                     ??_counter:
   103     0000                     ??_main:	
   104                           ; 1 bytes @ 0x0
   105                           
   106                           
   107                           	psect	cstackBANK0
   108     000C                     __pcstackBANK0:	
   109                           ; 1 bytes @ 0x0
   110                           
   111     000C                     ?_counter:
   112     000C                     ?_main:	
   113                           ; 1 bytes @ 0x0
   114                           
   115     000C                     ?_ISR:	
   116                           ; 1 bytes @ 0x0
   117                           
   118     000C                     ??_ISR:	
   119                           ; 1 bytes @ 0x0
   120                           
   121                           
   122                           ; 1 bytes @ 0x0
   123     000C                     	ds	3
   124                           
   125                           	psect	maintext
   126     0010                     __pmaintext:	
   127 ;;
   128 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   129 ;;
   130 ;; *************** function _main *****************
   131 ;; Defined at:
   132 ;;		line 13 in file "test.c"
   133 ;; Parameters:    Size  Location     Type
   134 ;;		None
   135 ;; Auto vars:     Size  Location     Type
   136 ;;		None
   137 ;; Return value:  Size  Location     Type
   138 ;;                  1    wreg      void 
   139 ;; Registers used:
   140 ;;		wreg, status,2, status,0, pclath, cstack
   141 ;; Tracked objects:
   142 ;;		On entry : B00/0
   143 ;;		On exit  : 0/0
   144 ;;		Unchanged: 0/0
   145 ;; Data sizes:     COMMON   BANK0
   146 ;;      Params:         0       0
   147 ;;      Locals:         0       0
   148 ;;      Temps:          0       0
   149 ;;      Totals:         0       0
   150 ;;Total ram usage:        0 bytes
   151 ;; Hardware stack levels required when called: 2
   152 ;; This function calls:
   153 ;;		_counter
   154 ;; This function is called by:
   155 ;;		Startup code after reset
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159     0010                     _main:	
   160                           ;psect for function _main
   161                           
   162     0010                     l607:	
   163                           ;incstack = 0
   164                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   165                           
   166                           
   167                           ;test.c: 14:     TRISA = 0x00;
   168     0010  1683               	bsf	3,5	;RP0=1, select bank1
   169     0011  0185               	clrf	5	;volatile
   170                           
   171                           ;test.c: 15:     TRISB = 0x00;
   172     0012  0186               	clrf	6	;volatile
   173                           
   174                           ;test.c: 16:     PORTB = 0x00;
   175     0013  1283               	bcf	3,5	;RP0=0, select bank0
   176     0014  0186               	clrf	6	;volatile
   177                           
   178                           ;test.c: 17:     PORTA = 0x00;
   179     0015  0185               	clrf	5	;volatile
   180     0016                     l609:
   181                           
   182                           ;test.c: 20:     OPTION_REGbits.T0CS = 0;
   183     0016  1683               	bsf	3,5	;RP0=1, select bank1
   184     0017  1281               	bcf	1,5	;volatile
   185     0018                     l611:
   186                           
   187                           ;test.c: 21:     OPTION_REGbits.T0SE = 0;
   188     0018  1201               	bcf	1,4	;volatile
   189     0019                     l613:
   190                           
   191                           ;test.c: 22:     OPTION_REGbits.PSA = 0;
   192     0019  1181               	bcf	1,3	;volatile
   193     001A                     l615:
   194                           
   195                           ;test.c: 25:     OPTION_REGbits.PS =7;
   196     001A  3007               	movlw	7
   197     001B  0481               	iorwf	1,f	;volatile
   198     001C                     l617:
   199                           
   200                           ;test.c: 26:     INTCONbits.T0IF = 0;
   201     001C  110B               	bcf	11,2	;volatile
   202     001D                     l619:
   203                           
   204                           ;test.c: 27:     INTCONbits.T0IE = 1;
   205     001D  168B               	bsf	11,5	;volatile
   206     001E                     l621:
   207                           
   208                           ;test.c: 28:     INTCONbits.GIE = 1;
   209     001E  178B               	bsf	11,7	;volatile
   210     001F                     l623:
   211                           
   212                           ;test.c: 29:     counter();
   213     001F  2032               	fcall	_counter
   214     0020                     l21:
   215     0020  280D               	ljmp	start
   216     0021                     __end_of_main:
   217                           
   218                           	psect	text1
   219     0032                     __ptext1:	
   220 ;; *************** function _counter *****************
   221 ;; Defined at:
   222 ;;		line 34 in file "test.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMMON   BANK0
   236 ;;      Params:         0       0
   237 ;;      Locals:         0       0
   238 ;;      Temps:          0       0
   239 ;;      Totals:         0       0
   240 ;;Total ram usage:        0 bytes
   241 ;; Hardware stack levels used: 1
   242 ;; Hardware stack levels required when called: 1
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		_main
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250     0032                     _counter:	
   251                           ;psect for function _counter
   252                           
   253     0032                     l24:	
   254                           ;incstack = 0
   255                           ; Regs used in _counter: [wreg]
   256                           ;test.c: 35:    while(1){
   257                           
   258     0032                     l605:
   259                           
   260                           ;test.c: 36:         PORTB = TMR0;
   261     0032  1283               	bcf	3,5	;RP0=0, select bank0
   262     0033  0801               	movf	1,w	;volatile
   263     0034  0086               	movwf	6	;volatile
   264     0035  2832               	goto	l24
   265     0036  0008               	return
   266     0037                     __end_of_counter:
   267                           
   268                           	psect	text2
   269     0021                     __ptext2:	
   270 ;; *************** function _ISR *****************
   271 ;; Defined at:
   272 ;;		line 40 in file "test.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0, btemp+1
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0
   286 ;;      Params:         0       0
   287 ;;      Locals:         0       0
   288 ;;      Temps:          0       3
   289 ;;      Totals:         0       3
   290 ;;Total ram usage:        3 bytes
   291 ;; Hardware stack levels used: 1
   292 ;; This function calls:
   293 ;;		Nothing
   294 ;; This function is called by:
   295 ;;		Interrupt level 1
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299     0021                     _ISR:	
   300                           ;psect for function _ISR
   301                           
   302     0021                     i1l627:
   303                           
   304                           ;test.c: 41:     if(INTCONbits.T0IF){
   305     0021  1D0B               	btfss	11,2	;volatile
   306     0022  2824               	goto	u2_21
   307     0023  2825               	goto	u2_20
   308     0024                     u2_21:
   309     0024  282A               	goto	i1l33
   310     0025                     u2_20:
   311     0025                     i1l629:
   312                           
   313                           ;test.c: 42:         PORTA++;
   314     0025  3001               	movlw	1
   315     0026  00CF               	movwf	btemp+1
   316     0027  084F               	movf	btemp+1,w
   317     0028  0785               	addwf	5,f	;volatile
   318     0029                     i1l631:
   319                           
   320                           ;test.c: 43:         INTCONbits.T0IF = 0;
   321     0029  110B               	bcf	11,2	;volatile
   322     002A                     i1l33:
   323     002A  080E               	movf	??_ISR+2,w
   324     002B  080D               	movf	??_ISR+1,w
   325     002C  008A               	movwf	10
   326     002D  0E0C               	swapf	??_ISR,w
   327     002E  0083               	movwf	3
   328     002F  0ECE               	swapf	btemp,f
   329     0030  0E4E               	swapf	btemp,w
   330     0031  0009               	retfie
   331     0032                     __end_of_ISR:
   332     004E                     btemp	set	78	;btemp
   333     004E                     wtemp0	set	78
   334                           
   335                           	psect	intentry
   336     0004                     __pintentry:	
   337                           ;incstack = 0
   338                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   339                           
   340     0004                     interrupt_function:
   341     004E                     saved_w	set	btemp
   342     0004  00CE               	movwf	btemp
   343     0005  0E03               	swapf	3,w
   344     0006  1283               	bcf	3,5	;RP0=0, select bank0
   345     0007  008C               	movwf	??_ISR
   346     0008  080A               	movf	10,w
   347     0009  008D               	movwf	??_ISR+1
   348     000A  084F               	movf	btemp+1,w
   349     000B  008E               	movwf	??_ISR+2
   350     000C  2821               	ljmp	_ISR
   351                           
   352                           	psect	config
   353                           
   354                           ;Config register CONFIG @ 0x2007
   355                           ;	Oscillator Selection bits
   356                           ;	FOSC = XT, XT oscillator
   357                           ;	Watchdog Timer
   358                           ;	WDTE = OFF, WDT disabled
   359                           ;	Power-up Timer Enable bit
   360                           ;	PWRTE = ON, Power-up Timer is enabled
   361                           ;	Code Protection bit
   362                           ;	CP = OFF, Code protection disabled
   363     2007                     	org	8199
   364     2007  3FF1               	dw	16369

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      3       3

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _counter
 ---------------------------------------------------------------------------------
 (1) _counter                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _counter

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      3       3       3        4.5%
ABS                  0      0       0       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Apr 19 22:07:14 2024

                     l21 0020                       l24 0032                      l611 0018  
                    l605 0032                      l621 001E                      l613 0019  
                    l623 001F                      l615 001A                      l607 0010  
                    l617 001C                      l609 0016                      l619 001D  
                    _ISR 0021                     ?_ISR 000C                     i1l33 002A  
                   _TMR0 0001                     u2_20 0025                     u2_21 0024  
                   _main 0010                     btemp 004E                     start 000D  
                  ??_ISR 000C                    ?_main 000C                    i1l631 0029  
                  i1l627 0021                    i1l629 0025                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
        __end_of_counter 0037                    pclath 000A                    status 0003  
                  wtemp0 004E          __initialization 000E             __end_of_main 0021  
                 ??_main 0000                ??_counter 0000                   saved_w 004E  
__end_of__initialization 000E           __pcstackCOMMON 0000           _OPTION_REGbits 0081  
             __pmaintext 0010               __pintentry 0004                  __ptext1 0032  
                __ptext2 0021                  _counter 0032     end_of_initialization 000E  
    start_initialization 000E              __end_of_ISR 0032                ___latbits 0000  
          __pcstackBANK0 000C                 ?_counter 000C        interrupt_function 0004  
             _INTCONbits 000B                 intlevel1 0000  
